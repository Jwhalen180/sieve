project: casskop-operator
stage: test
mode: obs-gap
straggler: kind-control-plane3
front-runner: kind-control-plane
operator-pod-label: casskop-operator
deployment-name: casskop-operator
ce-name: sonar-cassandra-cluster
ce-namespace: default
ce-rtype: cassandracluster
ce-diff-current: '{"metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration":
  "{\"apiVersion\":\"db.orange.com/v1alpha1\",\"kind\":\"CassandraCluster\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster\":\"k8s.kaas\"},\"name\":\"sonar-cassandra-cluster\",\"namespace\":\"default\"},\"spec\":{\"autoPilot\":false,\"autoUpdateSeedList\":false,\"bootstrapImage\":\"orangeopensource/cassandra-bootstrap:0.1.8\",\"cassandraImage\":\"cassandra:3.11\",\"configMapName\":\"cassandra-configmap-v1\",\"dataCapacity\":\"200Mi\",\"deletePVC\":true,\"gcStdout\":true,\"hardAntiAffinity\":false,\"imagepullpolicy\":\"IfNotPresent\",\"maxPodUnavailable\":1,\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}},\"runAsUser\":999,\"topology\":{\"dc\":[{\"name\":\"dc1\",\"nodesPerRacks\":1,\"rack\":[{\"name\":\"rack1\"}]}]}}}\n"}},
  "spec": {"topology": {"dc": [{"nodesPerRacks": 1}]}}}'
ce-diff-previous: '{"metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration":
  "{\"apiVersion\":\"db.orange.com/v1alpha1\",\"kind\":\"CassandraCluster\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster\":\"k8s.kaas\"},\"name\":\"sonar-cassandra-cluster\",\"namespace\":\"default\"},\"spec\":{\"autoPilot\":false,\"autoUpdateSeedList\":false,\"bootstrapImage\":\"orangeopensource/cassandra-bootstrap:0.1.8\",\"cassandraImage\":\"cassandra:3.11\",\"configMapName\":\"cassandra-configmap-v1\",\"dataCapacity\":\"200Mi\",\"deletePVC\":true,\"gcStdout\":true,\"hardAntiAffinity\":false,\"imagepullpolicy\":\"IfNotPresent\",\"maxPodUnavailable\":1,\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}},\"runAsUser\":999,\"topology\":{\"dc\":[{\"name\":\"dc1\",\"nodesPerRacks\":2,\"rack\":[{\"name\":\"rack1\"}]}]}}}\n"}},
  "spec": {"topology": {"dc": [{"nodesPerRacks": 2}]}}}'
ce-etype-current: Updated
ce-etype-previous: Updated
se-name: sonar-cassandra-cluster
se-namespace: default
se-rtype: cassandracluster
se-etype: Update
description: 'Pause any reconcile on casskop-operator after it sees a default/cassandracluster/sonar-cassandra-cluster
  event E. E should match the pattern {"metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration":
  "{\"apiVersion\":\"db.orange.com/v1alpha1\",\"kind\":\"CassandraCluster\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster\":\"k8s.kaas\"},\"name\":\"sonar-cassandra-cluster\",\"namespace\":\"default\"},\"spec\":{\"autoPilot\":false,\"autoUpdateSeedList\":false,\"bootstrapImage\":\"orangeopensource/cassandra-bootstrap:0.1.8\",\"cassandraImage\":\"cassandra:3.11\",\"configMapName\":\"cassandra-configmap-v1\",\"dataCapacity\":\"200Mi\",\"deletePVC\":true,\"gcStdout\":true,\"hardAntiAffinity\":false,\"imagepullpolicy\":\"IfNotPresent\",\"maxPodUnavailable\":1,\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}},\"runAsUser\":999,\"topology\":{\"dc\":[{\"name\":\"dc1\",\"nodesPerRacks\":1,\"rack\":[{\"name\":\"rack1\"}]}]}}}\n"}},
  "spec": {"topology": {"dc": [{"nodesPerRacks": 1}]}}} and the events before E should
  match {"metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration":
  "{\"apiVersion\":\"db.orange.com/v1alpha1\",\"kind\":\"CassandraCluster\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster\":\"k8s.kaas\"},\"name\":\"sonar-cassandra-cluster\",\"namespace\":\"default\"},\"spec\":{\"autoPilot\":false,\"autoUpdateSeedList\":false,\"bootstrapImage\":\"orangeopensource/cassandra-bootstrap:0.1.8\",\"cassandraImage\":\"cassandra:3.11\",\"configMapName\":\"cassandra-configmap-v1\",\"dataCapacity\":\"200Mi\",\"deletePVC\":true,\"gcStdout\":true,\"hardAntiAffinity\":false,\"imagepullpolicy\":\"IfNotPresent\",\"maxPodUnavailable\":1,\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"2Gi\"}},\"runAsUser\":999,\"topology\":{\"dc\":[{\"name\":\"dc1\",\"nodesPerRacks\":2,\"rack\":[{\"name\":\"rack1\"}]}]}}}\n"}},
  "spec": {"topology": {"dc": [{"nodesPerRacks": 2}]}}}. And resume reconcile on the
  controller casskop-operator after it sees an event cancel event E.'
