{
    "contour": {
        "contour-sample": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/resourceVersion",
            "metadata/uid",
            "status/conditions"
        ]
    },
    "contourconfiguration": {},
    "contourdeployment": {},
    "deployment": {
        "contour": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "status/conditions",
            "status/observedGeneration"
        ],
        "contour-operator": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "status/conditions",
            "status/observedGeneration"
        ]
    },
    "extensionservice": {},
    "gateway": {},
    "gatewayclass": {},
    "httpproxy": {},
    "httproute": {},
    "persistentvolumeclaim": {},
    "pod": {},
    "referencepolicy": {},
    "replicaset": {
        "contour-556489f6bb": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "status/observedGeneration"
        ],
        "contour-operator-8d55466d5": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/generation",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/ownerReferences",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/template/spec/containers/*/env",
            "spec/template/spec/containers/*/image",
            "status/observedGeneration"
        ]
    },
    "secret": {
        "contourcert": [
            "data/ca.crt",
            "data/tls.crt",
            "data/tls.key",
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid"
        ],
        "envoycert": [
            "data/ca.crt",
            "data/tls.crt",
            "data/tls.key",
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid"
        ]
    },
    "service": {
        "contour": [
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/clusterIPs/*",
            "spec/ports"
        ],
        "contour-operator-metrics": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/clusterIPs/*",
            "spec/ports"
        ],
        "envoy": [
            "metadata/annotations",
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/clusterIPs/*",
            "spec/healthCheckNodePort",
            "spec/ports"
        ],
        "kubernetes": [
            "metadata/creationTimestamp",
            "metadata/labels",
            "metadata/managedFields",
            "metadata/resourceVersion",
            "metadata/uid",
            "spec/clusterIP",
            "spec/clusterIPs/*",
            "spec/ports"
        ]
    },
    "statefulset": {},
    "tcproute": {},
    "tlscertificatedelegation": {},
    "tlsroute": {},
    "udproute": {}
}